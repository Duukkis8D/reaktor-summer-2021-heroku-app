{"version":3,"sources":["components/Filter.js","components/ProductList.js","services/retryApiRequest.js","services/productService.js","App.js","index.js"],"names":["Filter","productType","handleProductTypeChange","id","htmlFor","name","onChange","value","defaultValue","disabled","hidden","style","display","ProductList","productsAndAvailabilities","getProductData","width","height","headerHeight","rowHeight","rowCount","length","rowGetter","index","label","dataKey","flexGrow","flexShrink","axiosInstance","baseUrl","interceptors","response","use","data","console","log","config","params","manufacturer","error","get","Promise","reject","axios","create","retryApiRequest","all","category","then","map","productsArray","manufacturers","indexOf","push","productManufacturers","productAvailabilityPromises","productManufacturer","createProductAvailabilityPromise","serverResponses","productAvailabilityData","productAvailabilityMap","Map","i","set","products","productAvailabilities","addAvailabilityInfo","product","type","toLowerCase","color","price","availability","filter","availabilityObject","toUpperCase","productAvailabilityInfo","DATAPAYLOAD","substring","search","productList","App","useState","setProducts","setProductType","setProductManufacturers","useEffect","productService","productData","concat","setProductAvailabilityData","catch","setProductAvailabilityMap","setProductsAndAvailabilities","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f456c834.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( { productType, handleProductTypeChange } ) => {\n\treturn (\n\t\t<div id='filterProductsContainer'>\n\t\t\t<h2>Shows products by category type</h2>\n\t\t\t<label htmlFor='products'>\n\t\t\t\tPlease select a category.\n\t\t\t</label><br></br>\n\t\t\t<select name='products' onChange={ handleProductTypeChange } value={ productType }>\n\t\t\t\t<option defaultValue disabled hidden style={ { display: 'none' } } value=''></option>\n\t\t\t\t<option value='gloves'>gloves</option>\n\t\t\t\t<option value='facemasks'>facemasks</option>\n\t\t\t\t<option value='beanies'>beanies</option>\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport default Filter","import React from 'react'\nimport { Column, Table } from 'react-virtualized'\nimport 'react-virtualized/styles.css'\n\nconst ProductList = ( { productsAndAvailabilities, productType } ) => {\n\tconst renderProductList = () => {\n\t\tif( productType !== '' ) {\n\t\t\treturn (\n\t\t\t\t<Table\n\t\t\t\t\twidth={ 1100 }\n\t\t\t\t\theight={ 500 }\n\t\t\t\t\theaderHeight={ 20 }\n\t\t\t\t\trowHeight={ 30 }\n\t\t\t\t\trowCount={ getProductData().length }\n\t\t\t\t\trowGetter={ ( { index } ) => getProductData()[index] }>\n\t\t\t\t\t<Column label=\"id\" dataKey=\"id\" width={ 220 } flexGrow={ 1 } />\n\t\t\t\t\t<Column label=\"type\" dataKey=\"type\" width={ 80 } flexGrow={ 1 } flexShrink={ 2 } />\n\t\t\t\t\t<Column label=\"name\" dataKey=\"name\" width={ 200 } flexGrow={ 1 } />\n\t\t\t\t\t<Column label=\"color\" dataKey=\"color\" width={ 100 } flexGrow={ 1 } />\n\t\t\t\t\t<Column label=\"price\" dataKey=\"price\" width={ 60 } flexGrow={ 1 } flexShrink={ 2 } />\n\t\t\t\t\t<Column label=\"manufacturer\" dataKey=\"manufacturer\" width={ 140 } flexGrow={ 1 } />\n\t\t\t\t\t<Column label=\"availability\" dataKey=\"availability\" width={ 140 } flexGrow={ 1 } />\n\t\t\t\t</Table>\n\t\t\t)\n\t\t} else return // return nothing\n\t}\n\n\tconst getProductData = () => {\n\t\tif( productType === 'gloves' ) {\n\t\t\treturn productsAndAvailabilities[0]\n\t\t}\n\t\tif( productType === 'facemasks' ) {\n\t\t\treturn productsAndAvailabilities[1]\n\t\t}\n\t\tif( productType === 'beanies' ) {\n\t\t\treturn productsAndAvailabilities[2]\n\t\t} else return [ 'Unexpected error occurred. Please refresh page.' ]\n\t}\n\n\treturn (  \n\t\t<div id='productListContainer'>\n\t\t\t{ renderProductList() }\n\t\t</div>\n\t)\n}\n\nexport default ProductList","const axiosResponseInterceptor = ( axiosInstance, baseUrl ) => {\n\t// axios response interceptor. Request is sent again if the array of server response is empty.\n\taxiosInstance.interceptors.response.use( response => {\n\t\tif( response.data.length > 2 ) {\n\t\t\tconsole.log( \n\t\t\t\t'valid server response detected with parameter:', response.config.params\n\t\t\t)\n\n\t\t\treturn response\n\t\t}\n\n\t\tif( response.config.params.manufacturer ) {\n\t\t\tif( response.data.length <= 2 ) {\n\t\t\t\tconsole.error( \n\t\t\t\t\t'invalid server response detected with product manufacturer parameter:', \n\t\t\t\t\tresponse.config.params.manufacturer,\n\t\t\t\t\t'response.data.length:', response.data.length,\n\t\t\t\t\t'requesting data again...' \n\t\t\t\t)\n\n\t\t\t\treturn axiosInstance.get( baseUrl, { params: { manufacturer: response.config.params.manufacturer } } )\n\t\t\t}\n\t\t}\n\t}, error => {\n\t\treturn Promise.reject( 'error occurred during API request:', error )\n\t} )\n}\n\nexport default {\n\taxiosResponseInterceptor\n}","import axios from 'axios'\nimport retryApiRequest from './retryApiRequest'\n\nconst axiosInstance = axios.create()\nconst baseUrl = 'https://reaktor-2021-duukkis8d.herokuapp.com/api'\nretryApiRequest.axiosResponseInterceptor( axiosInstance, baseUrl )\n\nconst getProducts = () => {\n\treturn Promise\n\t\t.all( [\n\t\t\taxiosInstance.get( baseUrl, { params: { category: 'gloves' } } ),\n\t\t\taxiosInstance.get( baseUrl, { params: { category: 'facemasks' } } ),\n\t\t\taxiosInstance.get( baseUrl, { params: { category: 'beanies' } } )\n\t\t] )\n\t\t.then( response => {\n\t\t\tconst allProducts = response.map( response => response.data )\n\t\t\t// allProducts contains [0]: gloves, [1]: facemasks, [2]: beanies\n\t\t\treturn allProducts\n\t\t} )\n}\n\n// Finds unique manufacturers from a long list with many duplicants.\nconst findManufacturers = productsArray => {\n\tconst manufacturers = []\n\tfor ( let manufacturer of productsArray ) {\n\t\tif ( manufacturers.indexOf( manufacturer ) === -1 ) {\n\t\t\tmanufacturers.push( manufacturer )\n\t\t}\n\t}\n\n\treturn manufacturers\n}\n\nconst getProductAvailabilityData = ( productManufacturers ) => {\n\tconst createProductAvailabilityPromise = ( productManufacturer ) => {\n\t\treturn axiosInstance.get( baseUrl, { params: { manufacturer: productManufacturer } } )\n\t}\n\n\tconst productAvailabilityPromises = productManufacturers.map( productManufacturer => {\n\t\treturn createProductAvailabilityPromise( productManufacturer )\n\t} )\n\n\treturn Promise\n\t\t.all( productAvailabilityPromises )\n\t\t.then( serverResponses => serverResponses.map( response => response.data ) )\n}\n\nconst buildProductAvailabilityMap = ( productManufacturers, productAvailabilityData ) => {\n\tconst productAvailabilityMap = new Map()\n\n\tfor( let i = 0; i < productManufacturers.length; i++ ) {\n\t\tproductAvailabilityMap.set( productManufacturers[ i ], productAvailabilityData[ i ] )\n\t}\n\n\treturn productAvailabilityMap\n}\n\nconst buildCompleteProductList = ( products, productAvailabilities ) => {\n\tconst addAvailabilityInfo = ( product ) => {\n\t\treturn ( {\n\t\t\tid: product.id,\n\t\t\ttype: product.type,\n\t\t\tname: product.name.toLowerCase(),\n\t\t\tcolor: product.color.map( color => `${color}` ),\n\t\t\tprice: product.price,\n\t\t\tmanufacturer: product.manufacturer,\n\t\t\tavailability: productAvailabilities\n\t\t\t\t.get( product.manufacturer )\n\t\t\t\t.filter( availabilityObject => availabilityObject.id === product.id.toUpperCase() )\n\t\t\t\t.map( productAvailabilityInfo => {\n\t\t\t\t\treturn productAvailabilityInfo\n\t\t\t\t\t\t.DATAPAYLOAD\n\t\t\t\t\t\t.substring(\n\t\t\t\t\t\t\tproductAvailabilityInfo.DATAPAYLOAD.search( '<INSTOCKVALUE>' ) + 14,\n\t\t\t\t\t\t\tproductAvailabilityInfo.DATAPAYLOAD.search( '</INSTOCKVALUE>' )\n\t\t\t\t\t\t)\n\t\t\t\t} )[0].toLowerCase()\n\t\t} )\n\t}\n\n\treturn products.map( productList => {\n\t\treturn productList.map( addAvailabilityInfo )\n\t} )\n}\n\nexport default { \n\tgetProducts,\n\tfindManufacturers,\n\tgetProductAvailabilityData,\n\tbuildProductAvailabilityMap,\n\tbuildCompleteProductList\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ProductList from './components/ProductList'\nimport productService from './services/productService'\nimport './css/App.css'\n\nconst App = () => {\n\tconst [ products, setProducts ] = useState( [] )\n\tconst [ productType, setProductType ] = useState ( '' )\n\tconst [ productManufacturers, setProductManufacturers ] = useState( [] )\n\t// Gets all product data (except availability).\n\tuseEffect( () => {\n\t\tproductService\n\t\t\t.getProducts()\n\t\t\t.then( productData => {\n\t\t\t\tsetProducts( productData )\n\n\t\t\t\t// Spreads 2-dimensional array to 1 dimension, filters out other than product manufacturer data\n\t\t\t\t// and passes the result to findManufacturers function.\n\t\t\t\tsetProductManufacturers( productService.findManufacturers( \n\t\t\t\t\t[].concat( ...productData ).map( product => product.manufacturer ) ) )\n\t\t\t} )\n\t}, [] )\n\n\tconst [ productAvailabilityData, setProductAvailabilityData ] = useState( [] )\n\t// Gets all product availability data.\n\tuseEffect( () => {\n\t\tproductService\n\t\t\t.getProductAvailabilityData( productManufacturers )\n\t\t\t.then( productAvailabilityData => {\n\t\t\t\tsetProductAvailabilityData( productAvailabilityData )\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\tconsole.error( 'Error occurred while fetching product availability data.', error )\n\t\t\t} )\n\t}, [ productManufacturers ] )\n\n\tconst [ productAvailabilityMap, setProductAvailabilityMap ] = useState( new Map() )\n\t// Builds product availability Map data structure.\n\t// key: product manufacturer, value: product availability data\n\tuseEffect( () => { \n\t\tsetProductAvailabilityMap( productService\n\t\t\t.buildProductAvailabilityMap( productManufacturers, productAvailabilityData ) )\n\t}, [ productAvailabilityData ] )\n\n\tconst [ productsAndAvailabilities, setProductsAndAvailabilities ] = useState( [] )\n\t// Merges product and availability information.\n\tuseEffect( () => {\t\n\t\tsetProductsAndAvailabilities( productService\n\t\t\t.buildCompleteProductList( products, productAvailabilityMap )\n\t\t)\n\t}, [ productAvailabilityMap ] )\n\n\tconst handleProductTypeChange = ( event ) => {\n\t\tsetProductType( event.target.value )\n\t}\n\n\tconst renderIfThereIsProductData = () => {\n\t\tif( typeof productsAndAvailabilities !== 'undefined' && productsAndAvailabilities.length > 0 ) {\n\t\t\treturn (\n\t\t\t\t<div id='filterProductsAndProductListContainer'>\n\t\t\t\t\t<Filter productType={ productType }\n\t\t\t\t\t\t    handleProductTypeChange={ handleProductTypeChange }></Filter>\n\t\t\t\t\t<ProductList productsAndAvailabilities={ productsAndAvailabilities }\n\t\t\t\t\t\t\t\t productType={ productType }></ProductList>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else return <p>Loading product data. Please wait. This might take about 30-60 seconds.</p>\n\t}\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>Product list</h1>\n\t\t\t{ renderIfThereIsProductData() }\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )"],"sourceRoot":""}