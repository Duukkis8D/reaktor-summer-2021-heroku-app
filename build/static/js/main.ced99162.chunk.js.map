{"version":3,"sources":["components/Filter.js","components/ProductList.js","services/productService.js","App.js","index.js"],"names":["Filter","productType","handleProductTypeChange","id","htmlFor","name","onChange","value","defaultValue","disabled","hidden","style","display","ProductList","productsAndAvailabilities","renderProducts","console","log","baseUrl","Promise","all","axios","get","params","category","then","response","map","data","productsArray","manufacturers","manufacturer","indexOf","push","products","productAvailabilities","addAvailabilityInfo","product","type","color","price","filter","availabilityObject","toUpperCase","productAvailabilityInfo","DATAPAYLOAD","substring","search","toLowerCase","availability","productList","productManufacturers","productAvailabilityData","productAvailabilityMap","Map","i","length","set","productAvailabilityPromises","productManufacturer","createProductAvailabilityPromise","serverResponse","App","useState","setProducts","setProductType","setProductManufacturers","useEffect","productService","productData","concat","setProductAvailabilities","setProductsAndAvailabilities","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ced99162.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( { productType, handleProductTypeChange } ) => {\n\treturn (\n\t\t<div id='filterProductsContainer'>\n\t\t\t<h2>Shows products by category type</h2>\n\t\t\t<label htmlFor='products'>\n\t\t\t\tPlease select a category. It takes some time for the selection to take effect.\n\t\t\t</label><br></br>\n\t\t\t<select name='products' onChange={ handleProductTypeChange } value={ productType }>\n\t\t\t\t<option defaultValue disabled hidden style={ { display: 'none' } } value=''></option>\n\t\t\t\t<option value='gloves'>gloves</option>\n\t\t\t\t<option value='facemasks'>facemasks</option>\n\t\t\t\t<option value='beanies'>beanies</option>\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport default Filter","import React from 'react'\n\nconst ProductList = ( { productsAndAvailabilities, productType } ) => {\n\tconst renderProductList = () => {\n\t\tif( productType !== '' ) {\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>id</th>\n\t\t\t\t\t\t\t<th>type</th>\n\t\t\t\t\t\t\t<th>product name</th>\n\t\t\t\t\t\t\t<th>color</th>\n\t\t\t\t\t\t\t<th>manufacturer</th>\n\t\t\t\t\t\t\t<th>price</th>\n\t\t\t\t\t\t\t<th>availability</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ renderProducts() }\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t} else return // return nothing\n\t}\n\n\tconst renderProducts = () => {\n\t\tif( productType === 'gloves' ) {\n\t\t\tconsole.log( 'productsAndAvailabilities[0] in renderProducts function:', productsAndAvailabilities[0] )\n\t\t\treturn productsAndAvailabilities[0]\n\t\t}\n\t\tif( productType === 'facemasks' ) {\n\t\t\tconsole.log( 'productsAndAvailabilities[1] in renderProducts function:', productsAndAvailabilities[1] )\n\t\t\treturn productsAndAvailabilities[1]\n\t\t}\n\t\tif( productType === 'beanies' ) {\n\t\t\tconsole.log( 'productsAndAvailabilities[2] in renderProducts function:', productsAndAvailabilities[2] )\n\t\t\treturn productsAndAvailabilities[2]\n\t\t} else return <tr><td>Loading product data. Please wait.</td></tr>\n\t}\n\n\treturn (  \n\t\t<div id='productListContainer'>\n\t\t\t{ renderProductList() }\n\t\t</div>\n\t)\n}\n\nexport default ProductList","import React from 'react'\nimport axios from 'axios'\n\nconst getProducts = ( baseUrl ) => {\n\treturn Promise\n\t\t.all( [\n\t\t\taxios.get( baseUrl, { params: { category: 'gloves' } } ),\n\t\t\taxios.get( baseUrl, { params: { category: 'facemasks' } } ),\n\t\t\taxios.get( baseUrl, { params: { category: 'beanies' } } )\n\t\t] )\n\t\t.then( response => {\n\t\t\tconst allProducts = response.map( response => response.data )\n\t\t\t// allProducts contains [0]: gloves, [1]: facemasks, [2]: beanies\n\t\t\treturn allProducts\n\t\t} )\n}\n\n// Finds unique manufacturers from a long list with many duplicants.\nconst findManufacturers = productsArray => {\n\tconst manufacturers = []\n\tfor ( let manufacturer of productsArray ) {\n\t\tif ( manufacturers.indexOf( manufacturer ) === -1 ) {\n\t\t\tmanufacturers.push( manufacturer )\n\t\t}\n\t}\n\n\treturn manufacturers\n}\n\nconst buildProductAvailabilityMap = ( productManufacturers, productAvailabilityData ) => {\n\tconst productAvailabilityMap = new Map()\n\n\tfor( let i = 0; i < productManufacturers.length; i++ ) {\n\t\tproductAvailabilityMap.set( productManufacturers[ i ], productAvailabilityData[ i ] )\n\t}\n\n\treturn productAvailabilityMap\n}\n\nconst getProductAvailabilityPromises = ( productManufacturers, baseUrl ) => {\n\tconst createProductAvailabilityPromise = ( productManufacturer ) => {\n\t\treturn axios.get( baseUrl, { params: { manufacturer: productManufacturer } } )\n\t}\n\n\tconst productAvailabilityPromises = productManufacturers.map( productManufacturer => {\n\t\treturn createProductAvailabilityPromise( productManufacturer )\n\t} )\n\n\treturn Promise\n\t\t.all( productAvailabilityPromises )\n\t\t.then( response => response.map( serverResponse => serverResponse.data ) )\n}\n\nconst buildCompleteProductList = ( products, productAvailabilities ) => {\n\tconst addAvailabilityInfo = ( product ) => {\n\t\treturn (\n\t\t\t<tr key={ product.id }>\n\t\t\t\t<td key={ product.id }>{ product.id }</td>\n\t\t\t\t<td key={ product.type }>{ product.type }</td>\n\t\t\t\t<td key={ product.name }>{ product.name }</td>\n\t\t\t\t<td key={ product.color }>{ product.color.map( color => `${color} ` ) }</td>\n\t\t\t\t<td key={ product.manufacturer }>{ product.manufacturer }</td>\n\t\t\t\t<td key={ product.price }>{ product.price }</td>\n\t\t\t\t<td key={ product.availability }>{ productAvailabilities\n\t\t\t\t\t.get( product.manufacturer )\n\t\t\t\t\t.filter( availabilityObject => availabilityObject.id === product.id.toUpperCase() )\n\t\t\t\t\t.map( productAvailabilityInfo => {\n\t\t\t\t\t\treturn productAvailabilityInfo\n\t\t\t\t\t\t\t.DATAPAYLOAD\n\t\t\t\t\t\t\t.substring(\n\t\t\t\t\t\t\t\tproductAvailabilityInfo.DATAPAYLOAD.search( '<INSTOCKVALUE>' ) + 14,\n\t\t\t\t\t\t\t\tproductAvailabilityInfo.DATAPAYLOAD.search( '</INSTOCKVALUE>' )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t} )[0].toLowerCase() }\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t)\n\t}\n\n\treturn products.map( productList => {\n\t\treturn productList.map( addAvailabilityInfo )\n\t} )\n}\n\nexport default { \n\tgetProducts, \n\tfindManufacturers, \n\tbuildCompleteProductList, \n\tbuildProductAvailabilityMap, \n\tgetProductAvailabilityPromises \n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ProductList from './components/ProductList'\nimport productService from './services/productService'\nimport './css/App.css'\n\nconst App = () => {\n\tconst baseUrl = 'https://reaktor-2021-duukkis8d.herokuapp.com/api'\n\t\n\tconst [ products, setProducts ] = useState( [] )\n\tconst [ productType, setProductType ] = useState ( '' )\n\tconst [ productManufacturers, setProductManufacturers ] = useState( [] )\n\t// Gets all product data (except availability).\n\tuseEffect( () => {\n\t\tproductService\n\t\t\t.getProducts( baseUrl )\n\t\t\t.then( productData => {\n\t\t\t\tsetProducts( productData )\n\n\t\t\t\t// Spreads 2-dimensional array to 1 dimension, filters out other than product manufacturer data\n\t\t\t\t// and passes the result to findManufacturers function.\n\t\t\t\tsetProductManufacturers( productService.findManufacturers( \n\t\t\t\t\t[].concat( ...productData ).map( product => product.manufacturer ) ) )\n\t\t\t} )\n\t}, [] )\n\n\tconst [ productAvailabilities, setProductAvailabilities ] = useState( new Map() )\n\t// Gets all product availability data.\n\tuseEffect( () => {\n\t\tproductService\n\t\t\t.getProductAvailabilityPromises( productManufacturers, baseUrl )\n\t\t\t.then( productAvailabilities => {\n\t\t\t\tconst productAvailabilityData = productService\n\t\t\t\t   .buildProductAvailabilityMap( productManufacturers, productAvailabilities )\n\t\t\t\tsetProductAvailabilities( productAvailabilityData )\n\t\t\t } )\n\t}, [ productManufacturers ] )\n\n\tconst [ productsAndAvailabilities, setProductsAndAvailabilities ] = useState( [] )\n\t// Merges product and availability information.\n\tuseEffect( () => {\t\n\t\tsetProductsAndAvailabilities( productService\n\t\t\t.buildCompleteProductList( products, productAvailabilities )\n\t\t)\n\t}, [ productAvailabilities ] )\n\n\tconst handleProductTypeChange = ( event ) => {\n\t\tsetProductType( event.target.value )\n\t}\n\n\tconst renderIfThereIsProductData = () => {\n\t\tif( typeof productsAndAvailabilities !== 'undefined' && productsAndAvailabilities.length > 0 ) {\n\t\t\treturn (\n\t\t\t\t<div id='filterProductsAndProductListContainer'>\n\t\t\t\t\t<Filter productType={ productType }\n\t\t\t\t\t\t    handleProductTypeChange={ handleProductTypeChange }></Filter>\n\t\t\t\t\t<ProductList productsAndAvailabilities={ productsAndAvailabilities }\n\t\t\t\t\t\t\t\t productType={ productType }></ProductList>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else return <p>Loading product data. Please wait.</p>\n\t}\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>Product list</h1>\n\t\t\t{ renderIfThereIsProductData() }\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )"],"sourceRoot":""}