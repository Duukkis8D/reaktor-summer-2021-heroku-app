{"version":3,"sources":["components/Filter.js","components/ProductList.js","services/productService.js","App.js","index.js"],"names":["Filter","productType","handleProductTypeChange","id","htmlFor","name","onChange","value","defaultValue","disabled","hidden","style","display","ProductList","products","renderProducts","map","product","type","color","manufacturer","price","baseUrl","Promise","all","axios","get","params","category","productsArray","manufacturers","indexOf","push","productManufacturers","productAvailabilityPromises","forEach","productManufacturer","console","log","getProductAvailabilityPromises","App","useState","setProducts","setProductType","setProductManufacturers","useEffect","productService","then","response","allProducts","data","allManufacturers","concat","Map","productAvailabilities","setProductAvailabilities","productAvailabilityData","availabilities","set","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc270fd8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ( { productType, handleProductTypeChange } ) => {\n\treturn (\n\t\t<div id='filterProductsContainer'>\n\t\t\t<h2>Shows products by category type</h2>\n\t\t\t<label htmlFor='products'>Please select a category. It takes some time for the selection to take effect.</label><br></br>\n\t\t\t<select name='products' onChange={ handleProductTypeChange } value={ productType }>\n\t\t\t\t<option defaultValue disabled hidden style={ { display: 'none' } } value=''></option>\n\t\t\t\t<option value='gloves'>gloves</option>\n\t\t\t\t<option value='facemasks'>facemasks</option>\n\t\t\t\t<option value='beanies'>beanies</option>\n\t\t\t</select>\n\t\t</div>\n\t)\n}\n\nexport default Filter","import React from 'react'\n\nconst ProductList = ( { products, productType } ) => {\n\tconst renderProductList = () => {\n\t\tif( productType !== '' ) {\n\t\t\treturn (\n\t\t\t\t<table>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>id</th>\n\t\t\t\t\t\t\t<th>type</th>\n\t\t\t\t\t\t\t<th>product name</th>\n\t\t\t\t\t\t\t<th>color</th>\n\t\t\t\t\t\t\t<th>manufacturer</th>\n\t\t\t\t\t\t\t<th>price</th>\n\t\t\t\t\t\t\t<th>availability</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ renderProducts() }\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)\n\t\t} else return // return nothing\n\t}\n\n\tconst renderProducts = () => {\n\t\tif( productType === 'gloves' ) {\n\t\t\treturn (\n\t\t\t\tproducts[0].map( product => \n\t\t\t\t\t<tr key={ product.id }>\n\t\t\t\t\t\t<td key={ product.id }>{ product.id }</td>\n\t\t\t\t\t\t<td key={ product.type }>{ product.type }</td>\n\t\t\t\t\t\t<td key={ product.name }>{ product.name }</td>\n\t\t\t\t\t\t<td key={ product.color }>{ product.color.map( color => `${color} ` ) }</td>\n\t\t\t\t\t\t<td key={ product.manufacturer }>{ product.manufacturer }</td>\n\t\t\t\t\t\t<td key={ product.price }>{ product.price }</td>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\tif( productType === 'facemasks' ) {\n\t\t\treturn (\n\t\t\t\tproducts[1].map( product => \n\t\t\t\t\t<tr key={ product.id }>\n\t\t\t\t\t\t<td key={ product.id }>{ product.id }</td>\n\t\t\t\t\t\t<td key={ product.type }>{ product.type }</td>\n\t\t\t\t\t\t<td key={ product.name }>{ product.name }</td>\n\t\t\t\t\t\t<td key={ product.color }>{ product.color.map( color => `${color} ` ) }</td>\n\t\t\t\t\t\t<td key={ product.manufacturer }>{ product.manufacturer }</td>\n\t\t\t\t\t\t<td key={ product.price }>{ product.price }</td>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\tif( productType === 'beanies' ) {\n\t\t\treturn (\n\t\t\t\tproducts[2].map( product => \n\t\t\t\t\t<tr key={ product.id }>\n\t\t\t\t\t\t<td key={ product.id }>{ product.id }</td>\n\t\t\t\t\t\t<td key={ product.type }>{ product.type }</td>\n\t\t\t\t\t\t<td key={ product.name }>{ product.name }</td>\n\t\t\t\t\t\t<td key={ product.color }>{ product.color.map( color => `${color} ` ) }</td>\n\t\t\t\t\t\t<td key={ product.manufacturer }>{ product.manufacturer }</td>\n\t\t\t\t\t\t<td key={ product.price }>{ product.price }</td>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t\t\t)\n\t\t} else return <tr><td>Loading product data. Please wait.</td></tr>\n\t}\n\n\treturn (  \n\t\t<div id='productListContainer'>\n\t\t\t{ renderProductList() }\n\t\t</div>\n\t)\n}\n\nexport default ProductList","import axios from 'axios'\n\nconst getProducts = ( baseUrl ) => {\n\treturn Promise.all( [\n\t\taxios.get( baseUrl, { params: { category: 'gloves' } } ),\n\t\taxios.get( baseUrl, { params: { category: 'facemasks' } } ),\n\t\taxios.get( baseUrl, { params: { category: 'beanies' } } )\n\t] )\n}\n\n// Finds unique manufacturers from a long list with many duplicants.\nconst findManufacturers = productsArray => {\n\tconst manufacturers = []\n\tfor ( let manufacturer of productsArray ) {\n\t\tif ( manufacturers.indexOf( manufacturer ) === -1 ) {\n\t\t\tmanufacturers.push( manufacturer )\n\t\t}\n\t}\n\n\treturn manufacturers\n}\n\nconst getProductAvailabilityPromises = ( productManufacturers, baseUrl ) => {\n\tconst productAvailabilityPromises = []\n\n\tproductManufacturers.forEach( productManufacturer => {\n\t\t/*\n\t\tThe order of manufacturers in productManufacturers array\n\t\tis preserved in the new productAvailabilityPromises array.\n\t\t*/\n\t\tproductAvailabilityPromises.push( \n\t\t\taxios.get( baseUrl, { params: { manufacturer: productManufacturer } } )\n\t\t)\n\t\tconsole.log( 'product manufacturer from getProductAvailabilityPromises function: ', productManufacturer )\n\t} )\n\n\tconsole.log( 'productAvailabilityPromises Array object: ', productAvailabilityPromises )\n\n\treturn productAvailabilityPromises\n}\n\nconst getProductAvailabilities = ( productManufacturers, baseUrl ) => {\n\treturn Promise.all( getProductAvailabilityPromises( productManufacturers, baseUrl ) )\n}\n\nexport default { getProducts, findManufacturers, getProductAvailabilities }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport ProductList from './components/ProductList'\nimport productService from './services/productService'\nimport './css/App.css'\n\nconst App = () => {\n\tconst baseUrl = '/api'\n\t\n\tconst [ products, setProducts ] = useState( [] )\n\tconst [ productType, setProductType ] = useState ( '' )\n\tconst [ productManufacturers, setProductManufacturers ] = useState( [] )\n\t// Gets all product data (except availability).\n\tuseEffect( () => {\n\t\tconsole.log( 'productManufacturers in the beginning of useEffect: ', productManufacturers )\n\n\t\tproductService\n\t\t\t.getProducts( baseUrl )\n\t\t\t.then( response => {\n\t\t\t\tconsole.log( 'all products (headers, data etc):', response )\n\n\t\t\t\tconst allProducts = []\n\n\t\t\t\tresponse.forEach( products => {\n\t\t\t\t\tallProducts.push( products.data )\n\t\t\t\t} )\n\n\t\t\t\tconsole.log( 'all products (only data):', allProducts )\n\n\t\t\t\t// allProducts contains [0]: gloves, [1]: facemasks, [2]: beanies\n\t\t\t\tsetProducts( allProducts )\n\n\t\t\t\t// Spreading 2-dimensional array to 1 dimension.\n\t\t\t\tconst allManufacturers = productService.findManufacturers( \n\t\t\t\t\t[].concat( ...allProducts ).map( product => product.manufacturer ) )\n\t\t\t\tsetProductManufacturers( allManufacturers )\n\n\t\t\t\tconsole.log( 'productManufacturers after the server response and setters: ', productManufacturers )\n\t\t\t} )\n\t}, [] )\n\n\tconsole.log( 'productManufacturers after useEffect: ', productManufacturers )\n\n\tconst [ productAvailabilities, setProductAvailabilities ] = useState( new Map() )\n\t// Gets all product availability data.\n\tuseEffect( () => {\n\t\tproductService\n\t\t\t.getProductAvailabilities( productManufacturers, baseUrl )\n\t\t\t.then( response => {\n\t\t\t\t// For some reason, there is no actual data in server response.\n\t\t\t\tconst productAvailabilityData = new Map()\n\n\t\t\t\tresponse.forEach( availabilities => {\n\t\t\t\t\tproductManufacturers.forEach( productManufacturer => {\n\t\t\t\t\t\tconsole.log( 'response.forEach( availabilities => { productManufacturers.forEach( productManufacturer => {',\n\t\t\t\t\t\t\t'response: ', \n\t\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t\t'response.data: ',\n\t\t\t\t\t\t\tresponse.data,\n\t\t\t\t\t\t\t'availabilities: ',\n\t\t\t\t\t\t\tavailabilities,\n\t\t\t\t\t\t\t'availabilities.data: ',\n\t\t\t\t\t\t\tavailabilities.data,\n\t\t\t\t\t\t\t'productManufacturer: ',\n\t\t\t\t\t\t\tproductManufacturer\n\t\t\t\t\t\t)\n\t\t\t\t\t\tproductAvailabilityData.set( productManufacturer, availabilities.data )\n\t\t\t\t\t} )\n\t\t\t\t} )\n\n\t\t\t\tsetProductAvailabilities( productAvailabilityData )\n\t\t\t\tconsole.log( 'productAvailabilities Map object: ', productAvailabilities )\n\t\t\t} )\n\t}, [ productManufacturers ] )\n\n\tconst handleProductTypeChange = ( event ) => {\n\t\tsetProductType( event.target.value )\n\t}\n\n\tconst renderIfThereIsProductData = () => {\n\t\tif( typeof products !== 'undefined' && products.length > 0 ) {\n\t\t\treturn (\n\t\t\t\t<div id='filterProductsAndProductListContainer'>\n\t\t\t\t\t<Filter productType={ productType } handleProductTypeChange={ handleProductTypeChange }></Filter>\n\t\t\t\t\t<ProductList products={ products }\n\t\t\t\t\t\t\t\t productType={ productType }></ProductList>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else return <p>Loading product data. Please wait.</p>\n\t}\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>Product list</h1>\n\t\t\t{ renderIfThereIsProductData() }\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )"],"sourceRoot":""}